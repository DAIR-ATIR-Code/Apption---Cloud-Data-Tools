@page "/"

@using WebAppMaterialize.App.Services
@inject WebAppMaterialize.App.Services.Interfaces.IUIService uiService

@if(state == null)
{
    <h1 style="color: red">AppState not found.</h1>
}

<div class="row center grey-text text-darken-2">
    <h3>@state.currentPage.ToString()</h3>
</div>

<Stepper CurrentState="state.currentPage"/>

<div class="main">
    @switch (state.currentPage)
    {
        case StatePage.Connect:
            <Connect AnalyzeFiles="async()=>await state.AnalyzeFiles()" PreRequiredObject="state.PreRequiredObject" UIService="state.UIService" />
            break;
        case StatePage.Analysis:
            <Analysis AppState="state" IsProcessFinished="state.IsProcessOneFinished" />
            break;
        case StatePage.Review:
        case StatePage.Classification:
            <Review CloudDataTools="state.CloudDataTools" AppState="state" UpdateStatePage="state.UpdateStatePage" Reset="state.Reset" SecondAnalysis="async() =>await state.SecondAnalysis()" IsProcessFinished="state.IsProcessTwoFinished" />
            break;
        case StatePage.Upload:
            <Upload UpdateStatePage="state.UpdateStatePage" CloudDataTools="state.CloudDataTools" />
            break;
        default:
            <div>Error: Reached "default" state in index.cshtml. State is: @state.currentPage</div>
            break;
    }
</div>

@functions 
{    
    protected AppState state;

    protected override void OnInit()
    {
        state = new AppState(uiService);
        state.OnChange += StateHasChanged;
    }

    protected override void OnAfterRender()
    {
        base.OnAfterRender();
    }
}